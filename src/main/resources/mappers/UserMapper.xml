<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace后面写的是这个映射文件对应接口的包和接口名-->
<mapper namespace="com.example.ssm.mapper.UserMapper">
    <!--接口中有几个方法这里就要放几个对应的<select><insert><update><delete>-->
    <!--id是方法的名字, parameterType是对应方法中参数的类型-->
    <!--只有查询操作可以写返回类型，其余增删改不需要写返回类型-->
    <!--#{id}就类似与以前JDBC中的占位符?-->
    <!--#{loginCount}此处的名字必须和实体中的属性名一致-->
    <resultMap id="userResultMap" type="com.example.ssm.domain.User">
        <!--resultMap的作用是将实体的属性名和数据库列名对应到一起-->
        <!--id表示主键，result表示普通列-->
        <!--property表示实体中属性的名字，column表示列名-->
        <id property="id" column="id" javaType="int" jdbcType="INTEGER"
            typeHandler="org.apache.ibatis.type.IntegerTypeHandler"/>
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="birthday" column="birthday" jdbcType="DATE" javaType="java.time.LocalDate"
                typeHandler="org.apache.ibatis.type.LocalDateTypeHandler"/>
        <result property="sex" column="sex" />
        <result property="loginCount" column="login_count" />
        <result property="lastLoginTime" column="last_login_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"
                typeHandler="org.apache.ibatis.type.LocalDateTimeTypeHandler"/>
    </resultMap>
    <select id="findAll" resultMap="userResultMap">
        select * from users
    </select>
    <insert id="save">
        insert into users (email, password, birthday, sex) values (#{email}, #{password}, #{birthday}, #{sex})
    </insert>
    <delete id="deleteUser">
        delete from users where id=#{id}
    </delete>
    <update id="updateUser">
        update users set email=#{email}, password=#{password}, birthday=#{birthday} where id=#{id}
    </update>
    <select id="findOne" resultMap="userResultMap">
        select * from users where id=#{id}
    </select>
</mapper>
